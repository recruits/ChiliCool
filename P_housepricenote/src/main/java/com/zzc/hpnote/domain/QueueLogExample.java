package com.zzc.hpnote.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class QueueLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    public QueueLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andTotIsNull() {
            addCriterion("TOT is null");
            return (Criteria) this;
        }

        public Criteria andTotIsNotNull() {
            addCriterion("TOT is not null");
            return (Criteria) this;
        }

        public Criteria andTotEqualTo(Integer value) {
            addCriterion("TOT =", value, "tot");
            return (Criteria) this;
        }

        public Criteria andTotNotEqualTo(Integer value) {
            addCriterion("TOT <>", value, "tot");
            return (Criteria) this;
        }

        public Criteria andTotGreaterThan(Integer value) {
            addCriterion("TOT >", value, "tot");
            return (Criteria) this;
        }

        public Criteria andTotGreaterThanOrEqualTo(Integer value) {
            addCriterion("TOT >=", value, "tot");
            return (Criteria) this;
        }

        public Criteria andTotLessThan(Integer value) {
            addCriterion("TOT <", value, "tot");
            return (Criteria) this;
        }

        public Criteria andTotLessThanOrEqualTo(Integer value) {
            addCriterion("TOT <=", value, "tot");
            return (Criteria) this;
        }

        public Criteria andTotIn(List<Integer> values) {
            addCriterion("TOT in", values, "tot");
            return (Criteria) this;
        }

        public Criteria andTotNotIn(List<Integer> values) {
            addCriterion("TOT not in", values, "tot");
            return (Criteria) this;
        }

        public Criteria andTotBetween(Integer value1, Integer value2) {
            addCriterion("TOT between", value1, value2, "tot");
            return (Criteria) this;
        }

        public Criteria andTotNotBetween(Integer value1, Integer value2) {
            addCriterion("TOT not between", value1, value2, "tot");
            return (Criteria) this;
        }

        public Criteria andApdIsNull() {
            addCriterion("APD is null");
            return (Criteria) this;
        }

        public Criteria andApdIsNotNull() {
            addCriterion("APD is not null");
            return (Criteria) this;
        }

        public Criteria andApdEqualTo(Integer value) {
            addCriterion("APD =", value, "apd");
            return (Criteria) this;
        }

        public Criteria andApdNotEqualTo(Integer value) {
            addCriterion("APD <>", value, "apd");
            return (Criteria) this;
        }

        public Criteria andApdGreaterThan(Integer value) {
            addCriterion("APD >", value, "apd");
            return (Criteria) this;
        }

        public Criteria andApdGreaterThanOrEqualTo(Integer value) {
            addCriterion("APD >=", value, "apd");
            return (Criteria) this;
        }

        public Criteria andApdLessThan(Integer value) {
            addCriterion("APD <", value, "apd");
            return (Criteria) this;
        }

        public Criteria andApdLessThanOrEqualTo(Integer value) {
            addCriterion("APD <=", value, "apd");
            return (Criteria) this;
        }

        public Criteria andApdIn(List<Integer> values) {
            addCriterion("APD in", values, "apd");
            return (Criteria) this;
        }

        public Criteria andApdNotIn(List<Integer> values) {
            addCriterion("APD not in", values, "apd");
            return (Criteria) this;
        }

        public Criteria andApdBetween(Integer value1, Integer value2) {
            addCriterion("APD between", value1, value2, "apd");
            return (Criteria) this;
        }

        public Criteria andApdNotBetween(Integer value1, Integer value2) {
            addCriterion("APD not between", value1, value2, "apd");
            return (Criteria) this;
        }

        public Criteria andAvgIsNull() {
            addCriterion("AVG is null");
            return (Criteria) this;
        }

        public Criteria andAvgIsNotNull() {
            addCriterion("AVG is not null");
            return (Criteria) this;
        }

        public Criteria andAvgEqualTo(Integer value) {
            addCriterion("AVG =", value, "avg");
            return (Criteria) this;
        }

        public Criteria andAvgNotEqualTo(Integer value) {
            addCriterion("AVG <>", value, "avg");
            return (Criteria) this;
        }

        public Criteria andAvgGreaterThan(Integer value) {
            addCriterion("AVG >", value, "avg");
            return (Criteria) this;
        }

        public Criteria andAvgGreaterThanOrEqualTo(Integer value) {
            addCriterion("AVG >=", value, "avg");
            return (Criteria) this;
        }

        public Criteria andAvgLessThan(Integer value) {
            addCriterion("AVG <", value, "avg");
            return (Criteria) this;
        }

        public Criteria andAvgLessThanOrEqualTo(Integer value) {
            addCriterion("AVG <=", value, "avg");
            return (Criteria) this;
        }

        public Criteria andAvgIn(List<Integer> values) {
            addCriterion("AVG in", values, "avg");
            return (Criteria) this;
        }

        public Criteria andAvgNotIn(List<Integer> values) {
            addCriterion("AVG not in", values, "avg");
            return (Criteria) this;
        }

        public Criteria andAvgBetween(Integer value1, Integer value2) {
            addCriterion("AVG between", value1, value2, "avg");
            return (Criteria) this;
        }

        public Criteria andAvgNotBetween(Integer value1, Integer value2) {
            addCriterion("AVG not between", value1, value2, "avg");
            return (Criteria) this;
        }

        public Criteria andTimeSegIsNull() {
            addCriterion("TIME_SEG is null");
            return (Criteria) this;
        }

        public Criteria andTimeSegIsNotNull() {
            addCriterion("TIME_SEG is not null");
            return (Criteria) this;
        }

        public Criteria andTimeSegEqualTo(Integer value) {
            addCriterion("TIME_SEG =", value, "timeSeg");
            return (Criteria) this;
        }

        public Criteria andTimeSegNotEqualTo(Integer value) {
            addCriterion("TIME_SEG <>", value, "timeSeg");
            return (Criteria) this;
        }

        public Criteria andTimeSegGreaterThan(Integer value) {
            addCriterion("TIME_SEG >", value, "timeSeg");
            return (Criteria) this;
        }

        public Criteria andTimeSegGreaterThanOrEqualTo(Integer value) {
            addCriterion("TIME_SEG >=", value, "timeSeg");
            return (Criteria) this;
        }

        public Criteria andTimeSegLessThan(Integer value) {
            addCriterion("TIME_SEG <", value, "timeSeg");
            return (Criteria) this;
        }

        public Criteria andTimeSegLessThanOrEqualTo(Integer value) {
            addCriterion("TIME_SEG <=", value, "timeSeg");
            return (Criteria) this;
        }

        public Criteria andTimeSegIn(List<Integer> values) {
            addCriterion("TIME_SEG in", values, "timeSeg");
            return (Criteria) this;
        }

        public Criteria andTimeSegNotIn(List<Integer> values) {
            addCriterion("TIME_SEG not in", values, "timeSeg");
            return (Criteria) this;
        }

        public Criteria andTimeSegBetween(Integer value1, Integer value2) {
            addCriterion("TIME_SEG between", value1, value2, "timeSeg");
            return (Criteria) this;
        }

        public Criteria andTimeSegNotBetween(Integer value1, Integer value2) {
            addCriterion("TIME_SEG not between", value1, value2, "timeSeg");
            return (Criteria) this;
        }

        public Criteria andQTotIsNull() {
            addCriterion("Q_TOT is null");
            return (Criteria) this;
        }

        public Criteria andQTotIsNotNull() {
            addCriterion("Q_TOT is not null");
            return (Criteria) this;
        }

        public Criteria andQTotEqualTo(Integer value) {
            addCriterion("Q_TOT =", value, "qTot");
            return (Criteria) this;
        }

        public Criteria andQTotNotEqualTo(Integer value) {
            addCriterion("Q_TOT <>", value, "qTot");
            return (Criteria) this;
        }

        public Criteria andQTotGreaterThan(Integer value) {
            addCriterion("Q_TOT >", value, "qTot");
            return (Criteria) this;
        }

        public Criteria andQTotGreaterThanOrEqualTo(Integer value) {
            addCriterion("Q_TOT >=", value, "qTot");
            return (Criteria) this;
        }

        public Criteria andQTotLessThan(Integer value) {
            addCriterion("Q_TOT <", value, "qTot");
            return (Criteria) this;
        }

        public Criteria andQTotLessThanOrEqualTo(Integer value) {
            addCriterion("Q_TOT <=", value, "qTot");
            return (Criteria) this;
        }

        public Criteria andQTotIn(List<Integer> values) {
            addCriterion("Q_TOT in", values, "qTot");
            return (Criteria) this;
        }

        public Criteria andQTotNotIn(List<Integer> values) {
            addCriterion("Q_TOT not in", values, "qTot");
            return (Criteria) this;
        }

        public Criteria andQTotBetween(Integer value1, Integer value2) {
            addCriterion("Q_TOT between", value1, value2, "qTot");
            return (Criteria) this;
        }

        public Criteria andQTotNotBetween(Integer value1, Integer value2) {
            addCriterion("Q_TOT not between", value1, value2, "qTot");
            return (Criteria) this;
        }

        public Criteria andQApdIsNull() {
            addCriterion("Q_APD is null");
            return (Criteria) this;
        }

        public Criteria andQApdIsNotNull() {
            addCriterion("Q_APD is not null");
            return (Criteria) this;
        }

        public Criteria andQApdEqualTo(Integer value) {
            addCriterion("Q_APD =", value, "qApd");
            return (Criteria) this;
        }

        public Criteria andQApdNotEqualTo(Integer value) {
            addCriterion("Q_APD <>", value, "qApd");
            return (Criteria) this;
        }

        public Criteria andQApdGreaterThan(Integer value) {
            addCriterion("Q_APD >", value, "qApd");
            return (Criteria) this;
        }

        public Criteria andQApdGreaterThanOrEqualTo(Integer value) {
            addCriterion("Q_APD >=", value, "qApd");
            return (Criteria) this;
        }

        public Criteria andQApdLessThan(Integer value) {
            addCriterion("Q_APD <", value, "qApd");
            return (Criteria) this;
        }

        public Criteria andQApdLessThanOrEqualTo(Integer value) {
            addCriterion("Q_APD <=", value, "qApd");
            return (Criteria) this;
        }

        public Criteria andQApdIn(List<Integer> values) {
            addCriterion("Q_APD in", values, "qApd");
            return (Criteria) this;
        }

        public Criteria andQApdNotIn(List<Integer> values) {
            addCriterion("Q_APD not in", values, "qApd");
            return (Criteria) this;
        }

        public Criteria andQApdBetween(Integer value1, Integer value2) {
            addCriterion("Q_APD between", value1, value2, "qApd");
            return (Criteria) this;
        }

        public Criteria andQApdNotBetween(Integer value1, Integer value2) {
            addCriterion("Q_APD not between", value1, value2, "qApd");
            return (Criteria) this;
        }

        public Criteria andQAvgIsNull() {
            addCriterion("Q_AVG is null");
            return (Criteria) this;
        }

        public Criteria andQAvgIsNotNull() {
            addCriterion("Q_AVG is not null");
            return (Criteria) this;
        }

        public Criteria andQAvgEqualTo(Integer value) {
            addCriterion("Q_AVG =", value, "qAvg");
            return (Criteria) this;
        }

        public Criteria andQAvgNotEqualTo(Integer value) {
            addCriterion("Q_AVG <>", value, "qAvg");
            return (Criteria) this;
        }

        public Criteria andQAvgGreaterThan(Integer value) {
            addCriterion("Q_AVG >", value, "qAvg");
            return (Criteria) this;
        }

        public Criteria andQAvgGreaterThanOrEqualTo(Integer value) {
            addCriterion("Q_AVG >=", value, "qAvg");
            return (Criteria) this;
        }

        public Criteria andQAvgLessThan(Integer value) {
            addCriterion("Q_AVG <", value, "qAvg");
            return (Criteria) this;
        }

        public Criteria andQAvgLessThanOrEqualTo(Integer value) {
            addCriterion("Q_AVG <=", value, "qAvg");
            return (Criteria) this;
        }

        public Criteria andQAvgIn(List<Integer> values) {
            addCriterion("Q_AVG in", values, "qAvg");
            return (Criteria) this;
        }

        public Criteria andQAvgNotIn(List<Integer> values) {
            addCriterion("Q_AVG not in", values, "qAvg");
            return (Criteria) this;
        }

        public Criteria andQAvgBetween(Integer value1, Integer value2) {
            addCriterion("Q_AVG between", value1, value2, "qAvg");
            return (Criteria) this;
        }

        public Criteria andQAvgNotBetween(Integer value1, Integer value2) {
            addCriterion("Q_AVG not between", value1, value2, "qAvg");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table queue_log
     *
     * @mbggenerated do_not_delete_during_merge Sun May 25 10:23:34 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table queue_log
     *
     * @mbggenerated Sun May 25 10:23:34 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}