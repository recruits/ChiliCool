<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
         http://www.springframework.org/schema/context   
         http://www.springframework.org/schema/context/spring-context-3.2.xsd    
     http://www.springframework.org/schema/beans   
     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
     http://www.springframework.org/schema/tx   
     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
     http://www.springframework.org/schema/aop   
     http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<bean id="sysController" class="com.zzc.hpnote.busi.SystemControlTask"></bean>
	<!-- 使用apache的DBCP连接池 -->
	<!-- mysql 连接  -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/hpnote" />
		<property name="username" value="hpnote" />
		<property name="password" value="hpnote" />

		<property name="initialSize" value="5" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="1000" />
		<property name="poolPreparedStatements" value="true" />
		<property name="defaultAutoCommit" value="false" />
	</bean>
	<!-- oracle 连接
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@192.168.80.128:1521:ocp" />
		<property name="username" value="shenyang" />
		<property name="password" value="shenyang" />

		<property name="initialSize" value="5" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="1000" />
		<property name="poolPreparedStatements" value="true" />
		<property name="defaultAutoCommit" value="false" />
	</bean>
 	-->
	<!-- 这里的dataSource要与sqlSessionFactory的dataSource一致，否则事务无效 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<!-- 自动扫描映射器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 如果需要配置多数据源，则需要分包进行配置
		<property name="basePackage" value="cn.cttic.frame.dao;cn.cttic.boss.crm.demo.dao;cn.cttic.boss.crm.custManger.dao" />
		-->
		<property name="basePackage" value="com.zzc.hpnote.dao;" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 注意！这里不要偷懒！。要把userMapper赋给别的.class文件里的一个属性后再使用，否则事务无效。 也就是说当直接创建userMapper的一个class，然后使用IUserDao.insertUser方法的话也可以实现，但是事务将无效。 -->
	<!-- 这里的mapperInterface需要接口类型 -->
	<!-- 
	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.dao.IUserDao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	-->

	<!-- 扫描包 -->
	<context:component-scan base-package="com.zzc.hpnote" />

	<!-- 使用注解方式的事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>  