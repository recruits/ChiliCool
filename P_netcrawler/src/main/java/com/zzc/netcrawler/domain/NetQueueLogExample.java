package com.zzc.netcrawler.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class NetQueueLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    public NetQueueLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLogIdIsNull() {
            addCriterion("LOG_ID is null");
            return (Criteria) this;
        }

        public Criteria andLogIdIsNotNull() {
            addCriterion("LOG_ID is not null");
            return (Criteria) this;
        }

        public Criteria andLogIdEqualTo(Integer value) {
            addCriterion("LOG_ID =", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdNotEqualTo(Integer value) {
            addCriterion("LOG_ID <>", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdGreaterThan(Integer value) {
            addCriterion("LOG_ID >", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("LOG_ID >=", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdLessThan(Integer value) {
            addCriterion("LOG_ID <", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdLessThanOrEqualTo(Integer value) {
            addCriterion("LOG_ID <=", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdIn(List<Integer> values) {
            addCriterion("LOG_ID in", values, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdNotIn(List<Integer> values) {
            addCriterion("LOG_ID not in", values, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdBetween(Integer value1, Integer value2) {
            addCriterion("LOG_ID between", value1, value2, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdNotBetween(Integer value1, Integer value2) {
            addCriterion("LOG_ID not between", value1, value2, "logId");
            return (Criteria) this;
        }

        public Criteria andQueTypeIsNull() {
            addCriterion("QUE_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andQueTypeIsNotNull() {
            addCriterion("QUE_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andQueTypeEqualTo(Integer value) {
            addCriterion("QUE_TYPE =", value, "queType");
            return (Criteria) this;
        }

        public Criteria andQueTypeNotEqualTo(Integer value) {
            addCriterion("QUE_TYPE <>", value, "queType");
            return (Criteria) this;
        }

        public Criteria andQueTypeGreaterThan(Integer value) {
            addCriterion("QUE_TYPE >", value, "queType");
            return (Criteria) this;
        }

        public Criteria andQueTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("QUE_TYPE >=", value, "queType");
            return (Criteria) this;
        }

        public Criteria andQueTypeLessThan(Integer value) {
            addCriterion("QUE_TYPE <", value, "queType");
            return (Criteria) this;
        }

        public Criteria andQueTypeLessThanOrEqualTo(Integer value) {
            addCriterion("QUE_TYPE <=", value, "queType");
            return (Criteria) this;
        }

        public Criteria andQueTypeIn(List<Integer> values) {
            addCriterion("QUE_TYPE in", values, "queType");
            return (Criteria) this;
        }

        public Criteria andQueTypeNotIn(List<Integer> values) {
            addCriterion("QUE_TYPE not in", values, "queType");
            return (Criteria) this;
        }

        public Criteria andQueTypeBetween(Integer value1, Integer value2) {
            addCriterion("QUE_TYPE between", value1, value2, "queType");
            return (Criteria) this;
        }

        public Criteria andQueTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("QUE_TYPE not between", value1, value2, "queType");
            return (Criteria) this;
        }

        public Criteria andQueSizeIsNull() {
            addCriterion("QUE_SIZE is null");
            return (Criteria) this;
        }

        public Criteria andQueSizeIsNotNull() {
            addCriterion("QUE_SIZE is not null");
            return (Criteria) this;
        }

        public Criteria andQueSizeEqualTo(Integer value) {
            addCriterion("QUE_SIZE =", value, "queSize");
            return (Criteria) this;
        }

        public Criteria andQueSizeNotEqualTo(Integer value) {
            addCriterion("QUE_SIZE <>", value, "queSize");
            return (Criteria) this;
        }

        public Criteria andQueSizeGreaterThan(Integer value) {
            addCriterion("QUE_SIZE >", value, "queSize");
            return (Criteria) this;
        }

        public Criteria andQueSizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("QUE_SIZE >=", value, "queSize");
            return (Criteria) this;
        }

        public Criteria andQueSizeLessThan(Integer value) {
            addCriterion("QUE_SIZE <", value, "queSize");
            return (Criteria) this;
        }

        public Criteria andQueSizeLessThanOrEqualTo(Integer value) {
            addCriterion("QUE_SIZE <=", value, "queSize");
            return (Criteria) this;
        }

        public Criteria andQueSizeIn(List<Integer> values) {
            addCriterion("QUE_SIZE in", values, "queSize");
            return (Criteria) this;
        }

        public Criteria andQueSizeNotIn(List<Integer> values) {
            addCriterion("QUE_SIZE not in", values, "queSize");
            return (Criteria) this;
        }

        public Criteria andQueSizeBetween(Integer value1, Integer value2) {
            addCriterion("QUE_SIZE between", value1, value2, "queSize");
            return (Criteria) this;
        }

        public Criteria andQueSizeNotBetween(Integer value1, Integer value2) {
            addCriterion("QUE_SIZE not between", value1, value2, "queSize");
            return (Criteria) this;
        }

        public Criteria andQueLenIsNull() {
            addCriterion("QUE_LEN is null");
            return (Criteria) this;
        }

        public Criteria andQueLenIsNotNull() {
            addCriterion("QUE_LEN is not null");
            return (Criteria) this;
        }

        public Criteria andQueLenEqualTo(Integer value) {
            addCriterion("QUE_LEN =", value, "queLen");
            return (Criteria) this;
        }

        public Criteria andQueLenNotEqualTo(Integer value) {
            addCriterion("QUE_LEN <>", value, "queLen");
            return (Criteria) this;
        }

        public Criteria andQueLenGreaterThan(Integer value) {
            addCriterion("QUE_LEN >", value, "queLen");
            return (Criteria) this;
        }

        public Criteria andQueLenGreaterThanOrEqualTo(Integer value) {
            addCriterion("QUE_LEN >=", value, "queLen");
            return (Criteria) this;
        }

        public Criteria andQueLenLessThan(Integer value) {
            addCriterion("QUE_LEN <", value, "queLen");
            return (Criteria) this;
        }

        public Criteria andQueLenLessThanOrEqualTo(Integer value) {
            addCriterion("QUE_LEN <=", value, "queLen");
            return (Criteria) this;
        }

        public Criteria andQueLenIn(List<Integer> values) {
            addCriterion("QUE_LEN in", values, "queLen");
            return (Criteria) this;
        }

        public Criteria andQueLenNotIn(List<Integer> values) {
            addCriterion("QUE_LEN not in", values, "queLen");
            return (Criteria) this;
        }

        public Criteria andQueLenBetween(Integer value1, Integer value2) {
            addCriterion("QUE_LEN between", value1, value2, "queLen");
            return (Criteria) this;
        }

        public Criteria andQueLenNotBetween(Integer value1, Integer value2) {
            addCriterion("QUE_LEN not between", value1, value2, "queLen");
            return (Criteria) this;
        }

        public Criteria andQueCurrLenIsNull() {
            addCriterion("QUE_CURR_LEN is null");
            return (Criteria) this;
        }

        public Criteria andQueCurrLenIsNotNull() {
            addCriterion("QUE_CURR_LEN is not null");
            return (Criteria) this;
        }

        public Criteria andQueCurrLenEqualTo(Integer value) {
            addCriterion("QUE_CURR_LEN =", value, "queCurrLen");
            return (Criteria) this;
        }

        public Criteria andQueCurrLenNotEqualTo(Integer value) {
            addCriterion("QUE_CURR_LEN <>", value, "queCurrLen");
            return (Criteria) this;
        }

        public Criteria andQueCurrLenGreaterThan(Integer value) {
            addCriterion("QUE_CURR_LEN >", value, "queCurrLen");
            return (Criteria) this;
        }

        public Criteria andQueCurrLenGreaterThanOrEqualTo(Integer value) {
            addCriterion("QUE_CURR_LEN >=", value, "queCurrLen");
            return (Criteria) this;
        }

        public Criteria andQueCurrLenLessThan(Integer value) {
            addCriterion("QUE_CURR_LEN <", value, "queCurrLen");
            return (Criteria) this;
        }

        public Criteria andQueCurrLenLessThanOrEqualTo(Integer value) {
            addCriterion("QUE_CURR_LEN <=", value, "queCurrLen");
            return (Criteria) this;
        }

        public Criteria andQueCurrLenIn(List<Integer> values) {
            addCriterion("QUE_CURR_LEN in", values, "queCurrLen");
            return (Criteria) this;
        }

        public Criteria andQueCurrLenNotIn(List<Integer> values) {
            addCriterion("QUE_CURR_LEN not in", values, "queCurrLen");
            return (Criteria) this;
        }

        public Criteria andQueCurrLenBetween(Integer value1, Integer value2) {
            addCriterion("QUE_CURR_LEN between", value1, value2, "queCurrLen");
            return (Criteria) this;
        }

        public Criteria andQueCurrLenNotBetween(Integer value1, Integer value2) {
            addCriterion("QUE_CURR_LEN not between", value1, value2, "queCurrLen");
            return (Criteria) this;
        }

        public Criteria andConsNumIsNull() {
            addCriterion("CONS_NUM is null");
            return (Criteria) this;
        }

        public Criteria andConsNumIsNotNull() {
            addCriterion("CONS_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andConsNumEqualTo(Integer value) {
            addCriterion("CONS_NUM =", value, "consNum");
            return (Criteria) this;
        }

        public Criteria andConsNumNotEqualTo(Integer value) {
            addCriterion("CONS_NUM <>", value, "consNum");
            return (Criteria) this;
        }

        public Criteria andConsNumGreaterThan(Integer value) {
            addCriterion("CONS_NUM >", value, "consNum");
            return (Criteria) this;
        }

        public Criteria andConsNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("CONS_NUM >=", value, "consNum");
            return (Criteria) this;
        }

        public Criteria andConsNumLessThan(Integer value) {
            addCriterion("CONS_NUM <", value, "consNum");
            return (Criteria) this;
        }

        public Criteria andConsNumLessThanOrEqualTo(Integer value) {
            addCriterion("CONS_NUM <=", value, "consNum");
            return (Criteria) this;
        }

        public Criteria andConsNumIn(List<Integer> values) {
            addCriterion("CONS_NUM in", values, "consNum");
            return (Criteria) this;
        }

        public Criteria andConsNumNotIn(List<Integer> values) {
            addCriterion("CONS_NUM not in", values, "consNum");
            return (Criteria) this;
        }

        public Criteria andConsNumBetween(Integer value1, Integer value2) {
            addCriterion("CONS_NUM between", value1, value2, "consNum");
            return (Criteria) this;
        }

        public Criteria andConsNumNotBetween(Integer value1, Integer value2) {
            addCriterion("CONS_NUM not between", value1, value2, "consNum");
            return (Criteria) this;
        }

        public Criteria andConsTimeIsNull() {
            addCriterion("CONS_TIME is null");
            return (Criteria) this;
        }

        public Criteria andConsTimeIsNotNull() {
            addCriterion("CONS_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andConsTimeEqualTo(Integer value) {
            addCriterion("CONS_TIME =", value, "consTime");
            return (Criteria) this;
        }

        public Criteria andConsTimeNotEqualTo(Integer value) {
            addCriterion("CONS_TIME <>", value, "consTime");
            return (Criteria) this;
        }

        public Criteria andConsTimeGreaterThan(Integer value) {
            addCriterion("CONS_TIME >", value, "consTime");
            return (Criteria) this;
        }

        public Criteria andConsTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("CONS_TIME >=", value, "consTime");
            return (Criteria) this;
        }

        public Criteria andConsTimeLessThan(Integer value) {
            addCriterion("CONS_TIME <", value, "consTime");
            return (Criteria) this;
        }

        public Criteria andConsTimeLessThanOrEqualTo(Integer value) {
            addCriterion("CONS_TIME <=", value, "consTime");
            return (Criteria) this;
        }

        public Criteria andConsTimeIn(List<Integer> values) {
            addCriterion("CONS_TIME in", values, "consTime");
            return (Criteria) this;
        }

        public Criteria andConsTimeNotIn(List<Integer> values) {
            addCriterion("CONS_TIME not in", values, "consTime");
            return (Criteria) this;
        }

        public Criteria andConsTimeBetween(Integer value1, Integer value2) {
            addCriterion("CONS_TIME between", value1, value2, "consTime");
            return (Criteria) this;
        }

        public Criteria andConsTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("CONS_TIME not between", value1, value2, "consTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("NOTE is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("NOTE is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("NOTE =", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("NOTE <>", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("NOTE >", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("NOTE >=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("NOTE <", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("NOTE <=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("NOTE like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("NOTE not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("NOTE in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("NOTE not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("NOTE between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("NOTE not between", value1, value2, "note");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table net_queue_log
     *
     * @mbggenerated do_not_delete_during_merge Wed Jun 11 15:47:27 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table net_queue_log
     *
     * @mbggenerated Wed Jun 11 15:47:27 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}