------------------------------------------------------------------
--20140612 v0.2
1. 重新规划各执行模块，划分为：缓存管理、队列管理[任务队列、数据队列]、日志管理、执行任务
2. 缓存管理：存放全量的URL数据，目前存在问题[一次加载全量数据，需要分次加载，提高数据读取性能]。
3. 队列管理：
	a. 任务队列，负责从DB读取任务数据加入队列，由各个执行任务的线程从当前队列一次获取一个任务执行。
	b. IDX状态更新队列，负责将IDX变更后的状态数据回写DB。
	c. IDX数据新增队列，负责将IDX新增数据写入DB。
	d. INFO数据新增队列，负责将INFO新增数据写入DB。
	问题是: 线程执行过程中可能会异常退出，需要让线程发送心跳包，进行状态监控.
		[由于队列线程的压力相对较小，拟每5分一次心跳]
4. 执行任务线程：
	a. 每个任务从任务队列请求任务，处理任务，检查缓存数据，然后提交到对应的数据队列。
	问题是: 线程执行过程中可能会异常退出，需要让线程发送心跳包，进行状态监控.
		[由于任务线程的压力相对较大，拟每1分一次心跳]
5. index表中数据有重复现象
	目前处理流程：
	a. 加载表中的所有数据放入缓存。
	b. 解析任务从任务队列取到任务，解析出新数据列表。
	c. 新数据列表匹配缓存，不存在就放入缓存，然后装入数据保存队列。
	d. 直接将更新队列数据保存到DB。
	
	拟解决重复方案：
	a. 加载表中的所有数据放入缓存。
	b. 解析任务从任务队列取到任务，解析出新数据列表。
	c. 新数据直接装入数据保存队列，由队列消费任务取出数据，再进行缓存匹配，不存在就放入缓存，并且入DB;已存在，直接废弃。


--20140319 v0.1_2
1. 解析时间分类记录：请求返回时间、解析时间
2. 优化日志记录功能，设计到另外一个类中，使用日志单独代理类。
3. 优化PageHolder类，把常量代码分离出来。
4. 


--20140317 v0.1_1
1. pageHolder ,返回异常信息处理。
2. 数据线程，增加对解析失败的处理。
3. net_addr 增加异常原因。
4. net_log 重新设计。